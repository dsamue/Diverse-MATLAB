function [ binaryVector ] = huffmanEncoder( diffVector, CodeBook )
%%
%This function encodes a black n white image into a single binary vector
% Input: bwImg == black image i.e. a Y frame
%          codebook, the codebook/dictionary generated by huffmanCodebook

% Output: encoded bwImg, a binary vector formed by 
%           concatenated huffman codewords 

% You can either encode/embed your frame size or other information into 
% the binaryVector or 
% the decoder side can use the frame size as prior knowledge, 
% i.e. it's ok if you define the frame size etc. in the decoding function.

% You can add the input/output arguments if needed.

%% 
binaryVector = [];
for i=1:length(diffVector)
    value = diffVector(i);            %Pick out a value
    code=CodeBook{(value+256),2};     %Find corresponding huffman code
    binaryVector=[binaryVector code]; %Add to binVec 
end
binaryVector=dec2bin(binaryVector);   %Convert from double to bin


